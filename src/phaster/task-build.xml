<?xml version="1.0" encoding="UTF-8"?>
<project name="task-build" default="lsProps" basedir="." description="Shared tasks collection">

 <property name="build.build.dir" value="target/build"/>
 <property name="build.install.bin.dir" value="target/install"/>
 <property name="build.deploy.dir" value="target/deploy"/>
 <property name="build.web.dir" value="target/www"/>
 <property name="build.src.dir" value="src"/>
 <property name="build.test.dir" value="test"/>
 <property name="build.doc.dir" value="${build.build.dir}/docs"/>
 <property name="build.report.dir" value="${build.build.dir}/reports"/>
 
 
 <property name="build.tools.dir" value="/home/solid/tools" />
 <property name="sonar.bin.dir" value="${build.tools.dir}/sonar/sonar-scanner-3.2/bin" />
 <property name="php.bin.dir" value="${build.tools.dir}/php/bin"/>
 
 <property name="build.author" value="Solid Design"/>
 <property name="build.email" value="solid.design.com"/>
 <property name="build.task.dir" value="" />
 
 <taskdef name="sonar" classname="phing.tasks.ext.sonar.SonarTask" />

<import file="task/source/1-source-clone.xml" />
<import file="task/source/2-source-score.xml" />
<import file="task/source/3-source-resolve.xml" />
<import file="task/source/4-source-test.xml" />
<import file="task/source/5-source-deploy.xml" />
<import file="task/source/6-source-package.xml" />
<import file="task/binary/7-binary-resolve.xml" />
<import file="task/binary/8-binary-install.xml" />
<import file="task/binary/9-binary-test.xml" />
<import file="task/binary/10-binary-score.xml" />
<import file="task/binary/11-binary-deploy.xml" />

<!--shared tasks -->
<target name="lsProps" hidden="true" description="Displays all properties prefixed by project keyword."> 
 <echoproperties prefix="build."/>
</target>


<target name="deploy:local:web" description="Deploy project's php scripts to php builtin web server" hidden="true">
	<echo> TODO !</echo>
</target>

<target name="source:first:commit" hidden="true">
<property name="gitRepoURL" value="solid@192.168.1.41:solid/trivia.git" />
<exec command="git init" />
<exec command="git add ." />
<exec command="git commit -m 'first commit'" />
<exec command="git remote add origin ${gitRepoURL}" />
<exec command="git push -u origin master" />

</target>
<target name="wait:input" hidden="true">
	
	<property name="failTarget" value="wait:input:fail" />

	<propertyprompt propertyName="isActionsDone" defaultValue=" OK " promptText="Are all human actions done (OK/KO) ?" />

	<if>
	 <equals arg1="${isActionsDone}" arg2="OK" trim="yes" />
	 <then>
		<phingcall target="${nextTarget}" />
	 </then>
	 <else>
		<phingcall target="${failTarget}" />
	 </else>
	</if>

</target>

<target name="wait:input:fail">
	<fail message="Le build a été interrompu par une action humaine"/>
</target>

</project>
